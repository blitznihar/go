version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  database:
    image: "postgres:latest"
    container_name: "db-postgresql"
    ports:
      - "${DB_PORT_EXT}:5432"
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - "./platform/migrations/data.sql:/docker-entrypoint-initdb.d/data.sql"
    networks:
      - "mynet"

  rediscache:
    image: redis:latest
    container_name: "redis-cache"
    restart: always
    ports:
      - "${REDIS_PORT_EXT}:6379"
    command: redis-server --appendonly yes --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data:/data
    networks:
      - "mynet"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "${SERVER_PORT_EXT}:${SERVER_PORT}"
    depends_on:
      - "database"
    networks:
      - "mynet"

networks:
  mynet:
    driver: "bridge"
